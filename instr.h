#include <stdint.h>
#include "flags.h"
#include <capstone/capstone.h>
#include <capstone/x86.h>

#ifndef INSTR_H
#define INSTR_H

#define STACK_BOTTOM 0xFFF00000

int initialize();
int aaa_i(cs_insn *insn);
int aad_i(cs_insn *insn);
int aam_i(cs_insn *insn);
int aas_i(cs_insn *insn);
int adc_i(cs_insn *insn);
int add_i(cs_insn *insn);
int and_i(cs_insn *insn);
int arpl_i(cs_insn *insn);
int bound_i(cs_insn *insn);
int bsf_i(cs_insn *insn);
int bsr_i(cs_insn *insn);
int bt_i(cs_insn *insn);
int btc_i(cs_insn *insn);
int btr_i(cs_insn *insn);
int bts_i(cs_insn *insn);
int call_i(cs_insn *insn);
int cbw_i(cs_insn *insn);
int cwde_i(cs_insn *insn);
int clc_i(cs_insn *insn);
int cld_i(cs_insn *insn);
int cli_i(cs_insn *insn);
int clts_i(cs_insn *insn);
int cmc_i(cs_insn *insn);
int cmp_i(cs_insn *insn);
int cmps_i(cs_insn *insn);
int cmpsb_i(cs_insn *insn);
int cmpsw_i(cs_insn *insn);
int cmpsd_i(cs_insn *insn);
int cwd_i(cs_insn *insn);
int cdq_i(cs_insn *insn);
int daa_i(cs_insn *insn);
int das_i(cs_insn *insn);
int dec_i(cs_insn *insn);
int div_i(cs_insn *insn);
int enter_i(cs_insn *insn);
int hlt_i(cs_insn *insn);
int idiv_i(cs_insn *insn);
int imul_i(cs_insn *insn);
int in_i(cs_insn *insn);
int inc_i(cs_insn *insn);
int ins_i(cs_insn *insn);
int insb_i(cs_insn *insn);
int insw_i(cs_insn *insn);
int insd_i(cs_insn *insn);
int inter_i(cs_insn *insn);
int into_i(cs_insn *insn);
int iret_i(cs_insn *insn);
int iretd_i(cs_insn *insn);
int jcc_i(cs_insn *insn);
int jmp_i(cs_insn *insn);
int lahf_i(cs_insn *insn);
int lar_i(cs_insn *insn);
int lea_i(cs_insn *insn);
int leave_i(cs_insn *insn);
int lgdt_i(cs_insn *insn);
int lidt_i(cs_insn *insn);
int lgs_i(cs_insn *insn);
int lss_i(cs_insn *insn);
int lds_i(cs_insn *insn);
int les_i(cs_insn *insn);
int lfs_i(cs_insn *insn);
int lmsw_i(cs_insn *insn);
int lock_i(cs_insn *insn);
int lods_i(cs_insn *insn);
int lodsb_i(cs_insn *insn);
int lodsw_i(cs_insn *insn);
int lodsd_i(cs_insn *insn);
int loop_i(cs_insn *insn);
int lsl_i(cs_insn *insn);
int ltr_i(cs_insn *insn);
int movs_i(cs_insn *insn);
int movsb_i(cs_insn *insn);
int movsw_i(cs_insn *insn);
int movsd_i(cs_insn *insn);
int movsx_i(cs_insn *insn);
int movzx_i(cs_insn *insn);
int mul_i(cs_insn *insn);
int neg_i(cs_insn *insn);
int nop_i(cs_insn *insn);
int not_i(cs_insn *insn);
int or_i(cs_insn *insn);
int out_i(cs_insn *insn);
int outs_i(cs_insn *insn);
int outsb_i(cs_insn *insn);
int outsw_i(cs_insn *insn);
int outsd_i(cs_insn *insn);
int pop_i(cs_insn *insn);
int popa_i(cs_insn *insn);
int popad_i(cs_insn *insn);
int popf_i(cs_insn *insn);
int popfd_i(cs_insn *insn);
int push_i(cs_insn *insn);
int pusha_i(cs_insn *insn);
int pushad_i(cs_insn *insn);
int pushf_i(cs_insn *insn);
int pushfd_i(cs_insn *insn);
int rcl_i(cs_insn *insn);
int rcr_i(cs_insn *insn);
int rol_i(cs_insn *insn);
int ror_i(cs_insn *insn);
int rep_i(cs_insn *insn);
int repe_i(cs_insn *insn);
int repz_i(cs_insn *insn);
int repne_i(cs_insn *insn);
int repnz_i(cs_insn *insn);
int ret_i(cs_insn *insn);
int sahf_i(cs_insn *insn);
int sal_i(cs_insn *insn);
int sar_i(cs_insn *insn);
int shl_i(cs_insn *insn);
int shr_i(cs_insn *insn);
int sbb_i(cs_insn *insn);
int scas_i(cs_insn *insn);
int scasb_i(cs_insn *insn);
int scasw_i(cs_insn *insn);
int scasd_i(cs_insn *insn);
int setcc_i(cs_insn *insn);
int sgdt_i(cs_insn *insn);
int sidt_i(cs_insn *insn);
int shld_i(cs_insn *insn);
int shrd_i(cs_insn *insn);
int smsw_i(cs_insn *insn);
int stc_i(cs_insn *insn);
int std_i(cs_insn *insn);
int sti_i(cs_insn *insn);
int stos_i(cs_insn *insn);
int stosb_i(cs_insn *insn);
int stosw_i(cs_insn *insn);
int stosd_i(cs_insn *insn);
int str_i(cs_insn *insn);
int sub_i(cs_insn *insn);
int test_i(cs_insn *insn);
int verr_i(cs_insn *insn);
int verw_i(cs_insn *insn);
int wait_i(cs_insn *insn);
int xchg_i(cs_insn *insn);
int xlat_i(cs_insn *insn);
int xlatb_i(cs_insn *insn);
int xor_i(cs_insn *insn);
int mov_i(cs_insn *insn);
uint32_t reg_val(int reg_id);
uint32_t eff_addr(x86_op_mem m);
uint32_t pow_i(uint32_t b, uint32_t exp);
void write16(uint32_t addr, uint16_t value);
void write32(uint32_t addr, uint32_t value);
uint16_t read16(uint32_t addr);
uint32_t read32(uint32_t addr);

#endif